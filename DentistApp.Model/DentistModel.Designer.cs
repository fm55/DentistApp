//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Appointments_dbo_Patients_Patient_PatientId", "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.Patient), "Appointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Appointment), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Appointments_dbo_Users_CurrentUser_UserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.User), "Appointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Appointment), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Notes_dbo_Appointments_AppointmentId", "Appointments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DentistApp.Model.Appointment), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Note), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_OperationAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.Appointment), "OperationAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.OperationAppointment), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_TeethAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.Appointment), "TeethAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.TeethAppointment), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Notes_dbo_Notes_Note_NoteId", "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.Note), "Notes1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Note), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Notes_dbo_OperationAppointments_OperationAppointment_OperationAppointmentId", "OperationAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.OperationAppointment), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Note), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Notes_dbo_Operations_OperationId", "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DentistApp.Model.Operation), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Note), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Notes_dbo_Patients_PatientId", "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DentistApp.Model.Patient), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Note), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Notes_dbo_Teeth_ToothId", "Teeth", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DentistApp.Model.Tooth), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Note), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Notes_dbo_TeethAppointments_TeethAppointment_TeethAppointmentId", "TeethAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.TeethAppointment), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Note), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Notes_dbo_Users_CurrentUser_UserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.User), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Note), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_OperationAppointments_dbo_Operations_Operation_OperationId", "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.Operation), "OperationAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.OperationAppointment), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_OperationAppointments_dbo_Users_CurrentUser_UserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.User), "OperationAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.OperationAppointment), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Operations_dbo_Users_CurrentUser_UserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.User), "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Operation), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Patients_dbo_Users_CurrentUser_UserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.User), "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Patient), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Teeth_dbo_Users_CurrentUser_UserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.User), "Teeth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.Tooth), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_TeethAppointments_dbo_Teeth_Teeth_ToothId", "Teeth", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.Tooth), "TeethAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.TeethAppointment), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_TeethAppointments_dbo_Users_CurrentUser_UserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.User), "TeethAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.TeethAppointment), true)]
[assembly: EdmRelationshipAttribute("DentistModel", "FK_dbo_Users_dbo_Users_CurrentUser_UserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DentistApp.Model.User), "Users1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DentistApp.Model.User), true)]

#endregion

namespace DentistApp.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DentistEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DentistEntities object using the connection string found in the 'DentistEntities' section of the application configuration file.
        /// </summary>
        public DentistEntities() : base("name=DentistEntities", "DentistEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DentistEntities object.
        /// </summary>
        public DentistEntities(string connectionString) : base(connectionString, "DentistEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DentistEntities object.
        /// </summary>
        public DentistEntities(EntityConnection connection) : base(connection, "DentistEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Appointment> Appointments
        {
            get
            {
                if ((_Appointments == null))
                {
                    _Appointments = base.CreateObjectSet<Appointment>("Appointments");
                }
                return _Appointments;
            }
        }
        private ObjectSet<Appointment> _Appointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OperationAppointment> OperationAppointments
        {
            get
            {
                if ((_OperationAppointments == null))
                {
                    _OperationAppointments = base.CreateObjectSet<OperationAppointment>("OperationAppointments");
                }
                return _OperationAppointments;
            }
        }
        private ObjectSet<OperationAppointment> _OperationAppointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Operation> Operations
        {
            get
            {
                if ((_Operations == null))
                {
                    _Operations = base.CreateObjectSet<Operation>("Operations");
                }
                return _Operations;
            }
        }
        private ObjectSet<Operation> _Operations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tooth> Teeth
        {
            get
            {
                if ((_Teeth == null))
                {
                    _Teeth = base.CreateObjectSet<Tooth>("Teeth");
                }
                return _Teeth;
            }
        }
        private ObjectSet<Tooth> _Teeth;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeethAppointment> TeethAppointments
        {
            get
            {
                if ((_TeethAppointments == null))
                {
                    _TeethAppointments = base.CreateObjectSet<TeethAppointment>("TeethAppointments");
                }
                return _TeethAppointments;
            }
        }
        private ObjectSet<TeethAppointment> _TeethAppointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Appointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointments(Appointment appointment)
        {
            base.AddObject("Appointments", appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OperationAppointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperationAppointments(OperationAppointment operationAppointment)
        {
            base.AddObject("OperationAppointments", operationAppointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Operations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperations(Operation operation)
        {
            base.AddObject("Operations", operation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teeth EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeeth(Tooth tooth)
        {
            base.AddObject("Teeth", tooth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeethAppointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeethAppointments(TeethAppointment teethAppointment)
        {
            base.AddObject("TeethAppointments", teethAppointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DentistModel", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Appointment object.
        /// </summary>
        /// <param name="appointmentId">Initial value of the AppointmentId property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="amountToPay">Initial value of the AmountToPay property.</param>
        /// <param name="amountPaid">Initial value of the AmountPaid property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="entityState">Initial value of the EntityState property.</param>
        public static Appointment CreateAppointment(global::System.Int32 appointmentId, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Decimal amount, global::System.Double amountToPay, global::System.Double amountPaid, global::System.DateTime dateCreated, global::System.Boolean isDeleted, global::System.Int32 entityState)
        {
            Appointment appointment = new Appointment();
            appointment.AppointmentId = appointmentId;
            appointment.StartTime = startTime;
            appointment.EndTime = endTime;
            appointment.Amount = amount;
            appointment.AmountToPay = amountToPay;
            appointment.AmountPaid = amountPaid;
            appointment.DateCreated = dateCreated;
            appointment.IsDeleted = isDeleted;
            appointment.EntityState = entityState;
            return appointment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppointmentId
        {
            get
            {
                return _AppointmentId;
            }
            set
            {
                if (_AppointmentId != value)
                {
                    OnAppointmentIdChanging(value);
                    ReportPropertyChanging("AppointmentId");
                    _AppointmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AppointmentId");
                    OnAppointmentIdChanged();
                }
            }
        }
        private global::System.Int32 _AppointmentId;
        partial void OnAppointmentIdChanging(global::System.Int32 value);
        partial void OnAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AmountToPay
        {
            get
            {
                return _AmountToPay;
            }
            set
            {
                OnAmountToPayChanging(value);
                ReportPropertyChanging("AmountToPay");
                _AmountToPay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountToPay");
                OnAmountToPayChanged();
            }
        }
        private global::System.Double _AmountToPay;
        partial void OnAmountToPayChanging(global::System.Double value);
        partial void OnAmountToPayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AmountPaid
        {
            get
            {
                return _AmountPaid;
            }
            set
            {
                OnAmountPaidChanging(value);
                ReportPropertyChanging("AmountPaid");
                _AmountPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountPaid");
                OnAmountPaidChanged();
            }
        }
        private global::System.Double _AmountPaid;
        partial void OnAmountPaidChanging(global::System.Double value);
        partial void OnAmountPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        new public global::System.Int32 EntityState
        {
            get
            {
                return _EntityState;
            }
            set
            {
                OnEntityStateChanging(value);
                ReportPropertyChanging("EntityState");
                _EntityState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityState");
                OnEntityStateChanged();
            }
        }
        private global::System.Int32 _EntityState;
        partial void OnEntityStateChanging(global::System.Int32 value);
        partial void OnEntityStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentUser_UserId
        {
            get
            {
                return _CurrentUser_UserId;
            }
            set
            {
                OnCurrentUser_UserIdChanging(value);
                ReportPropertyChanging("CurrentUser_UserId");
                _CurrentUser_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentUser_UserId");
                OnCurrentUser_UserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentUser_UserId;
        partial void OnCurrentUser_UserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentUser_UserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Patient_PatientId
        {
            get
            {
                return _Patient_PatientId;
            }
            set
            {
                OnPatient_PatientIdChanging(value);
                ReportPropertyChanging("Patient_PatientId");
                _Patient_PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Patient_PatientId");
                OnPatient_PatientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Patient_PatientId;
        partial void OnPatient_PatientIdChanging(Nullable<global::System.Int32> value);
        partial void OnPatient_PatientIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Appointments_dbo_Patients_Patient_PatientId", "Patients")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("DentistModel.FK_dbo_Appointments_dbo_Patients_Patient_PatientId", "Patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("DentistModel.FK_dbo_Appointments_dbo_Patients_Patient_PatientId", "Patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("DentistModel.FK_dbo_Appointments_dbo_Patients_Patient_PatientId", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("DentistModel.FK_dbo_Appointments_dbo_Patients_Patient_PatientId", "Patients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Appointments_dbo_Users_CurrentUser_UserId", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Appointments_dbo_Users_CurrentUser_UserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Appointments_dbo_Users_CurrentUser_UserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Appointments_dbo_Users_CurrentUser_UserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DentistModel.FK_dbo_Appointments_dbo_Users_CurrentUser_UserId", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Appointments_AppointmentId", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Appointments_AppointmentId", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Appointments_AppointmentId", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_OperationAppointments_dbo_Appointments_Appointment_AppointmentId", "OperationAppointments")]
        public EntityCollection<OperationAppointment> OperationAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OperationAppointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Appointments_Appointment_AppointmentId", "OperationAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OperationAppointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Appointments_Appointment_AppointmentId", "OperationAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_TeethAppointments_dbo_Appointments_Appointment_AppointmentId", "TeethAppointments")]
        public EntityCollection<TeethAppointment> TeethAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeethAppointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Appointments_Appointment_AppointmentId", "TeethAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeethAppointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Appointments_Appointment_AppointmentId", "TeethAppointments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DentistModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="noteId">Initial value of the NoteId property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="operationId">Initial value of the OperationId property.</param>
        /// <param name="toothId">Initial value of the ToothId property.</param>
        /// <param name="appointmentId">Initial value of the AppointmentId property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="entityState">Initial value of the EntityState property.</param>
        public static Note CreateNote(global::System.Int32 noteId, global::System.Int32 patientId, global::System.Int32 operationId, global::System.Int32 toothId, global::System.Int32 appointmentId, global::System.DateTime dateCreated, global::System.Boolean isDeleted, global::System.Int32 entityState)
        {
            Note note = new Note();
            note.NoteId = noteId;
            note.PatientId = patientId;
            note.OperationId = operationId;
            note.ToothId = toothId;
            note.AppointmentId = appointmentId;
            note.DateCreated = dateCreated;
            note.IsDeleted = isDeleted;
            note.EntityState = entityState;
            return note;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteId
        {
            get
            {
                return _NoteId;
            }
            set
            {
                if (_NoteId != value)
                {
                    OnNoteIdChanging(value);
                    ReportPropertyChanging("NoteId");
                    _NoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoteId");
                    OnNoteIdChanged();
                }
            }
        }
        private global::System.Int32 _NoteId;
        partial void OnNoteIdChanging(global::System.Int32 value);
        partial void OnNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperationId
        {
            get
            {
                return _OperationId;
            }
            set
            {
                OnOperationIdChanging(value);
                ReportPropertyChanging("OperationId");
                _OperationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationId");
                OnOperationIdChanged();
            }
        }
        private global::System.Int32 _OperationId;
        partial void OnOperationIdChanging(global::System.Int32 value);
        partial void OnOperationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToothId
        {
            get
            {
                return _ToothId;
            }
            set
            {
                OnToothIdChanging(value);
                ReportPropertyChanging("ToothId");
                _ToothId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToothId");
                OnToothIdChanged();
            }
        }
        private global::System.Int32 _ToothId;
        partial void OnToothIdChanging(global::System.Int32 value);
        partial void OnToothIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppointmentId
        {
            get
            {
                return _AppointmentId;
            }
            set
            {
                OnAppointmentIdChanging(value);
                ReportPropertyChanging("AppointmentId");
                _AppointmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppointmentId");
                OnAppointmentIdChanged();
            }
        }
        private global::System.Int32 _AppointmentId;
        partial void OnAppointmentIdChanging(global::System.Int32 value);
        partial void OnAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        new public global::System.Int32 EntityState
        {
            get
            {
                return _EntityState;
            }
            set
            {
                OnEntityStateChanging(value);
                ReportPropertyChanging("EntityState");
                _EntityState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityState");
                OnEntityStateChanged();
            }
        }
        private global::System.Int32 _EntityState;
        partial void OnEntityStateChanging(global::System.Int32 value);
        partial void OnEntityStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentUser_UserId
        {
            get
            {
                return _CurrentUser_UserId;
            }
            set
            {
                OnCurrentUser_UserIdChanging(value);
                ReportPropertyChanging("CurrentUser_UserId");
                _CurrentUser_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentUser_UserId");
                OnCurrentUser_UserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentUser_UserId;
        partial void OnCurrentUser_UserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentUser_UserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Note_NoteId
        {
            get
            {
                return _Note_NoteId;
            }
            set
            {
                OnNote_NoteIdChanging(value);
                ReportPropertyChanging("Note_NoteId");
                _Note_NoteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Note_NoteId");
                OnNote_NoteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Note_NoteId;
        partial void OnNote_NoteIdChanging(Nullable<global::System.Int32> value);
        partial void OnNote_NoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OperationAppointment_OperationAppointmentId
        {
            get
            {
                return _OperationAppointment_OperationAppointmentId;
            }
            set
            {
                OnOperationAppointment_OperationAppointmentIdChanging(value);
                ReportPropertyChanging("OperationAppointment_OperationAppointmentId");
                _OperationAppointment_OperationAppointmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationAppointment_OperationAppointmentId");
                OnOperationAppointment_OperationAppointmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OperationAppointment_OperationAppointmentId;
        partial void OnOperationAppointment_OperationAppointmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnOperationAppointment_OperationAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TeethAppointment_TeethAppointmentId
        {
            get
            {
                return _TeethAppointment_TeethAppointmentId;
            }
            set
            {
                OnTeethAppointment_TeethAppointmentIdChanging(value);
                ReportPropertyChanging("TeethAppointment_TeethAppointmentId");
                _TeethAppointment_TeethAppointmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeethAppointment_TeethAppointmentId");
                OnTeethAppointment_TeethAppointmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TeethAppointment_TeethAppointmentId;
        partial void OnTeethAppointment_TeethAppointmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnTeethAppointment_TeethAppointmentIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Appointments_AppointmentId", "Appointments")]
        public Appointment Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DentistModel.FK_dbo_Notes_dbo_Appointments_AppointmentId", "Appointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DentistModel.FK_dbo_Notes_dbo_Appointments_AppointmentId", "Appointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Appointment> AppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DentistModel.FK_dbo_Notes_dbo_Appointments_AppointmentId", "Appointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Appointment>("DentistModel.FK_dbo_Notes_dbo_Appointments_AppointmentId", "Appointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Notes_Note_NoteId", "Notes1")]
        public EntityCollection<Note> Notes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Notes_Note_NoteId", "Notes1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Notes_Note_NoteId", "Notes1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Notes_Note_NoteId", "Notes")]
        public Note Note1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Note>("DentistModel.FK_dbo_Notes_dbo_Notes_Note_NoteId", "Notes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Note>("DentistModel.FK_dbo_Notes_dbo_Notes_Note_NoteId", "Notes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Note> Note1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Note>("DentistModel.FK_dbo_Notes_dbo_Notes_Note_NoteId", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Note>("DentistModel.FK_dbo_Notes_dbo_Notes_Note_NoteId", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_OperationAppointments_OperationAppointment_OperationAppointmentId", "OperationAppointments")]
        public OperationAppointment OperationAppointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationAppointment>("DentistModel.FK_dbo_Notes_dbo_OperationAppointments_OperationAppointment_OperationAppointmentId", "OperationAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationAppointment>("DentistModel.FK_dbo_Notes_dbo_OperationAppointments_OperationAppointment_OperationAppointmentId", "OperationAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OperationAppointment> OperationAppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationAppointment>("DentistModel.FK_dbo_Notes_dbo_OperationAppointments_OperationAppointment_OperationAppointmentId", "OperationAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OperationAppointment>("DentistModel.FK_dbo_Notes_dbo_OperationAppointments_OperationAppointment_OperationAppointmentId", "OperationAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Operations_OperationId", "Operations")]
        public Operation Operation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("DentistModel.FK_dbo_Notes_dbo_Operations_OperationId", "Operations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("DentistModel.FK_dbo_Notes_dbo_Operations_OperationId", "Operations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operation> OperationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("DentistModel.FK_dbo_Notes_dbo_Operations_OperationId", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operation>("DentistModel.FK_dbo_Notes_dbo_Operations_OperationId", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Patients_PatientId", "Patients")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("DentistModel.FK_dbo_Notes_dbo_Patients_PatientId", "Patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("DentistModel.FK_dbo_Notes_dbo_Patients_PatientId", "Patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("DentistModel.FK_dbo_Notes_dbo_Patients_PatientId", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("DentistModel.FK_dbo_Notes_dbo_Patients_PatientId", "Patients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Teeth_ToothId", "Teeth")]
        public Tooth Tooth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tooth>("DentistModel.FK_dbo_Notes_dbo_Teeth_ToothId", "Teeth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tooth>("DentistModel.FK_dbo_Notes_dbo_Teeth_ToothId", "Teeth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tooth> ToothReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tooth>("DentistModel.FK_dbo_Notes_dbo_Teeth_ToothId", "Teeth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tooth>("DentistModel.FK_dbo_Notes_dbo_Teeth_ToothId", "Teeth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_TeethAppointments_TeethAppointment_TeethAppointmentId", "TeethAppointments")]
        public TeethAppointment TeethAppointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeethAppointment>("DentistModel.FK_dbo_Notes_dbo_TeethAppointments_TeethAppointment_TeethAppointmentId", "TeethAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeethAppointment>("DentistModel.FK_dbo_Notes_dbo_TeethAppointments_TeethAppointment_TeethAppointmentId", "TeethAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeethAppointment> TeethAppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeethAppointment>("DentistModel.FK_dbo_Notes_dbo_TeethAppointments_TeethAppointment_TeethAppointmentId", "TeethAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeethAppointment>("DentistModel.FK_dbo_Notes_dbo_TeethAppointments_TeethAppointment_TeethAppointmentId", "TeethAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Users_CurrentUser_UserId", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Notes_dbo_Users_CurrentUser_UserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Notes_dbo_Users_CurrentUser_UserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Notes_dbo_Users_CurrentUser_UserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DentistModel.FK_dbo_Notes_dbo_Users_CurrentUser_UserId", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DentistModel", Name="Operation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Operation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Operation object.
        /// </summary>
        /// <param name="operationId">Initial value of the OperationId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="entityState">Initial value of the EntityState property.</param>
        public static Operation CreateOperation(global::System.Int32 operationId, global::System.Decimal amount, global::System.DateTime dateCreated, global::System.Boolean isDeleted, global::System.Int32 entityState)
        {
            Operation operation = new Operation();
            operation.OperationId = operationId;
            operation.Amount = amount;
            operation.DateCreated = dateCreated;
            operation.IsDeleted = isDeleted;
            operation.EntityState = entityState;
            return operation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperationId
        {
            get
            {
                return _OperationId;
            }
            set
            {
                if (_OperationId != value)
                {
                    OnOperationIdChanging(value);
                    ReportPropertyChanging("OperationId");
                    _OperationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OperationId");
                    OnOperationIdChanged();
                }
            }
        }
        private global::System.Int32 _OperationId;
        partial void OnOperationIdChanging(global::System.Int32 value);
        partial void OnOperationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        new public global::System.Int32 EntityState
        {
            get
            {
                return _EntityState;
            }
            set
            {
                OnEntityStateChanging(value);
                ReportPropertyChanging("EntityState");
                _EntityState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityState");
                OnEntityStateChanged();
            }
        }
        private global::System.Int32 _EntityState;
        partial void OnEntityStateChanging(global::System.Int32 value);
        partial void OnEntityStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentUser_UserId
        {
            get
            {
                return _CurrentUser_UserId;
            }
            set
            {
                OnCurrentUser_UserIdChanging(value);
                ReportPropertyChanging("CurrentUser_UserId");
                _CurrentUser_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentUser_UserId");
                OnCurrentUser_UserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentUser_UserId;
        partial void OnCurrentUser_UserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentUser_UserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Operations_OperationId", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Operations_OperationId", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Operations_OperationId", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_OperationAppointments_dbo_Operations_Operation_OperationId", "OperationAppointments")]
        public EntityCollection<OperationAppointment> OperationAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OperationAppointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Operations_Operation_OperationId", "OperationAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OperationAppointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Operations_Operation_OperationId", "OperationAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Operations_dbo_Users_CurrentUser_UserId", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Operations_dbo_Users_CurrentUser_UserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Operations_dbo_Users_CurrentUser_UserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Operations_dbo_Users_CurrentUser_UserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DentistModel.FK_dbo_Operations_dbo_Users_CurrentUser_UserId", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DentistModel", Name="OperationAppointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OperationAppointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OperationAppointment object.
        /// </summary>
        /// <param name="operationAppointmentId">Initial value of the OperationAppointmentId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="entityState">Initial value of the EntityState property.</param>
        public static OperationAppointment CreateOperationAppointment(global::System.Int32 operationAppointmentId, global::System.Double amount, global::System.DateTime dateCreated, global::System.Boolean isDeleted, global::System.Int32 entityState)
        {
            OperationAppointment operationAppointment = new OperationAppointment();
            operationAppointment.OperationAppointmentId = operationAppointmentId;
            operationAppointment.Amount = amount;
            operationAppointment.DateCreated = dateCreated;
            operationAppointment.IsDeleted = isDeleted;
            operationAppointment.EntityState = entityState;
            return operationAppointment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperationAppointmentId
        {
            get
            {
                return _OperationAppointmentId;
            }
            set
            {
                if (_OperationAppointmentId != value)
                {
                    OnOperationAppointmentIdChanging(value);
                    ReportPropertyChanging("OperationAppointmentId");
                    _OperationAppointmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OperationAppointmentId");
                    OnOperationAppointmentIdChanged();
                }
            }
        }
        private global::System.Int32 _OperationAppointmentId;
        partial void OnOperationAppointmentIdChanging(global::System.Int32 value);
        partial void OnOperationAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        new public global::System.Int32 EntityState
        {
            get
            {
                return _EntityState;
            }
            set
            {
                OnEntityStateChanging(value);
                ReportPropertyChanging("EntityState");
                _EntityState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityState");
                OnEntityStateChanged();
            }
        }
        private global::System.Int32 _EntityState;
        partial void OnEntityStateChanging(global::System.Int32 value);
        partial void OnEntityStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Appointment_AppointmentId
        {
            get
            {
                return _Appointment_AppointmentId;
            }
            set
            {
                OnAppointment_AppointmentIdChanging(value);
                ReportPropertyChanging("Appointment_AppointmentId");
                _Appointment_AppointmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Appointment_AppointmentId");
                OnAppointment_AppointmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Appointment_AppointmentId;
        partial void OnAppointment_AppointmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnAppointment_AppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentUser_UserId
        {
            get
            {
                return _CurrentUser_UserId;
            }
            set
            {
                OnCurrentUser_UserIdChanging(value);
                ReportPropertyChanging("CurrentUser_UserId");
                _CurrentUser_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentUser_UserId");
                OnCurrentUser_UserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentUser_UserId;
        partial void OnCurrentUser_UserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentUser_UserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Operation_OperationId
        {
            get
            {
                return _Operation_OperationId;
            }
            set
            {
                OnOperation_OperationIdChanging(value);
                ReportPropertyChanging("Operation_OperationId");
                _Operation_OperationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Operation_OperationId");
                OnOperation_OperationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Operation_OperationId;
        partial void OnOperation_OperationIdChanging(Nullable<global::System.Int32> value);
        partial void OnOperation_OperationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_OperationAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments")]
        public Appointment Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Appointment> AppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Appointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_OperationAppointments_OperationAppointment_OperationAppointmentId", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_OperationAppointments_OperationAppointment_OperationAppointmentId", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_OperationAppointments_OperationAppointment_OperationAppointmentId", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_OperationAppointments_dbo_Operations_Operation_OperationId", "Operations")]
        public Operation Operation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("DentistModel.FK_dbo_OperationAppointments_dbo_Operations_Operation_OperationId", "Operations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("DentistModel.FK_dbo_OperationAppointments_dbo_Operations_Operation_OperationId", "Operations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operation> OperationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("DentistModel.FK_dbo_OperationAppointments_dbo_Operations_Operation_OperationId", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operation>("DentistModel.FK_dbo_OperationAppointments_dbo_Operations_Operation_OperationId", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_OperationAppointments_dbo_Users_CurrentUser_UserId", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_OperationAppointments_dbo_Users_CurrentUser_UserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_OperationAppointments_dbo_Users_CurrentUser_UserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_OperationAppointments_dbo_Users_CurrentUser_UserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DentistModel.FK_dbo_OperationAppointments_dbo_Users_CurrentUser_UserId", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DentistModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="entityState">Initial value of the EntityState property.</param>
        public static Patient CreatePatient(global::System.Int32 patientId, global::System.DateTime dateCreated, global::System.Boolean isDeleted, global::System.Int32 entityState)
        {
            Patient patient = new Patient();
            patient.PatientId = patientId;
            patient.DateCreated = dateCreated;
            patient.IsDeleted = isDeleted;
            patient.EntityState = entityState;
            return patient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                if (_PatientId != value)
                {
                    OnPatientIdChanging(value);
                    ReportPropertyChanging("PatientId");
                    _PatientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientId");
                    OnPatientIdChanged();
                }
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TelNo1
        {
            get
            {
                return _TelNo1;
            }
            set
            {
                OnTelNo1Changing(value);
                ReportPropertyChanging("TelNo1");
                _TelNo1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TelNo1");
                OnTelNo1Changed();
            }
        }
        private global::System.String _TelNo1;
        partial void OnTelNo1Changing(global::System.String value);
        partial void OnTelNo1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TelNo2
        {
            get
            {
                return _TelNo2;
            }
            set
            {
                OnTelNo2Changing(value);
                ReportPropertyChanging("TelNo2");
                _TelNo2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TelNo2");
                OnTelNo2Changed();
            }
        }
        private global::System.String _TelNo2;
        partial void OnTelNo2Changing(global::System.String value);
        partial void OnTelNo2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        new public global::System.Int32 EntityState
        {
            get
            {
                return _EntityState;
            }
            set
            {
                OnEntityStateChanging(value);
                ReportPropertyChanging("EntityState");
                _EntityState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityState");
                OnEntityStateChanged();
            }
        }
        private global::System.Int32 _EntityState;
        partial void OnEntityStateChanging(global::System.Int32 value);
        partial void OnEntityStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentUser_UserId
        {
            get
            {
                return _CurrentUser_UserId;
            }
            set
            {
                OnCurrentUser_UserIdChanging(value);
                ReportPropertyChanging("CurrentUser_UserId");
                _CurrentUser_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentUser_UserId");
                OnCurrentUser_UserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentUser_UserId;
        partial void OnCurrentUser_UserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentUser_UserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Appointments_dbo_Patients_Patient_PatientId", "Appointments")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("DentistModel.FK_dbo_Appointments_dbo_Patients_Patient_PatientId", "Appointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("DentistModel.FK_dbo_Appointments_dbo_Patients_Patient_PatientId", "Appointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Patients_PatientId", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Patients_PatientId", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Patients_PatientId", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Patients_dbo_Users_CurrentUser_UserId", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Patients_dbo_Users_CurrentUser_UserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Patients_dbo_Users_CurrentUser_UserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Patients_dbo_Users_CurrentUser_UserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DentistModel.FK_dbo_Patients_dbo_Users_CurrentUser_UserId", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DentistModel", Name="TeethAppointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeethAppointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeethAppointment object.
        /// </summary>
        /// <param name="teethAppointmentId">Initial value of the TeethAppointmentId property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="entityState">Initial value of the EntityState property.</param>
        public static TeethAppointment CreateTeethAppointment(global::System.Int32 teethAppointmentId, global::System.DateTime dateCreated, global::System.Boolean isDeleted, global::System.Int32 entityState)
        {
            TeethAppointment teethAppointment = new TeethAppointment();
            teethAppointment.TeethAppointmentId = teethAppointmentId;
            teethAppointment.DateCreated = dateCreated;
            teethAppointment.IsDeleted = isDeleted;
            teethAppointment.EntityState = entityState;
            return teethAppointment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeethAppointmentId
        {
            get
            {
                return _TeethAppointmentId;
            }
            set
            {
                if (_TeethAppointmentId != value)
                {
                    OnTeethAppointmentIdChanging(value);
                    ReportPropertyChanging("TeethAppointmentId");
                    _TeethAppointmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeethAppointmentId");
                    OnTeethAppointmentIdChanged();
                }
            }
        }
        private global::System.Int32 _TeethAppointmentId;
        partial void OnTeethAppointmentIdChanging(global::System.Int32 value);
        partial void OnTeethAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        new public global::System.Int32 EntityState
        {
            get
            {
                return _EntityState;
            }
            set
            {
                OnEntityStateChanging(value);
                ReportPropertyChanging("EntityState");
                _EntityState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityState");
                OnEntityStateChanged();
            }
        }
        private global::System.Int32 _EntityState;
        partial void OnEntityStateChanging(global::System.Int32 value);
        partial void OnEntityStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Appointment_AppointmentId
        {
            get
            {
                return _Appointment_AppointmentId;
            }
            set
            {
                OnAppointment_AppointmentIdChanging(value);
                ReportPropertyChanging("Appointment_AppointmentId");
                _Appointment_AppointmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Appointment_AppointmentId");
                OnAppointment_AppointmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Appointment_AppointmentId;
        partial void OnAppointment_AppointmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnAppointment_AppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentUser_UserId
        {
            get
            {
                return _CurrentUser_UserId;
            }
            set
            {
                OnCurrentUser_UserIdChanging(value);
                ReportPropertyChanging("CurrentUser_UserId");
                _CurrentUser_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentUser_UserId");
                OnCurrentUser_UserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentUser_UserId;
        partial void OnCurrentUser_UserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentUser_UserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Teeth_ToothId
        {
            get
            {
                return _Teeth_ToothId;
            }
            set
            {
                OnTeeth_ToothIdChanging(value);
                ReportPropertyChanging("Teeth_ToothId");
                _Teeth_ToothId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Teeth_ToothId");
                OnTeeth_ToothIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Teeth_ToothId;
        partial void OnTeeth_ToothIdChanging(Nullable<global::System.Int32> value);
        partial void OnTeeth_ToothIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_TeethAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments")]
        public Appointment Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Appointment> AppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Appointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Appointments_Appointment_AppointmentId", "Appointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_TeethAppointments_TeethAppointment_TeethAppointmentId", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_TeethAppointments_TeethAppointment_TeethAppointmentId", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_TeethAppointments_TeethAppointment_TeethAppointmentId", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_TeethAppointments_dbo_Teeth_Teeth_ToothId", "Teeth")]
        public Tooth Tooth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tooth>("DentistModel.FK_dbo_TeethAppointments_dbo_Teeth_Teeth_ToothId", "Teeth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tooth>("DentistModel.FK_dbo_TeethAppointments_dbo_Teeth_Teeth_ToothId", "Teeth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tooth> ToothReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tooth>("DentistModel.FK_dbo_TeethAppointments_dbo_Teeth_Teeth_ToothId", "Teeth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tooth>("DentistModel.FK_dbo_TeethAppointments_dbo_Teeth_Teeth_ToothId", "Teeth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_TeethAppointments_dbo_Users_CurrentUser_UserId", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_TeethAppointments_dbo_Users_CurrentUser_UserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_TeethAppointments_dbo_Users_CurrentUser_UserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_TeethAppointments_dbo_Users_CurrentUser_UserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DentistModel.FK_dbo_TeethAppointments_dbo_Users_CurrentUser_UserId", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DentistModel", Name="Tooth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tooth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tooth object.
        /// </summary>
        /// <param name="toothId">Initial value of the ToothId property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="entityState">Initial value of the EntityState property.</param>
        public static Tooth CreateTooth(global::System.Int32 toothId, global::System.DateTime dateCreated, global::System.Boolean isDeleted, global::System.Int32 entityState)
        {
            Tooth tooth = new Tooth();
            tooth.ToothId = toothId;
            tooth.DateCreated = dateCreated;
            tooth.IsDeleted = isDeleted;
            tooth.EntityState = entityState;
            return tooth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToothId
        {
            get
            {
                return _ToothId;
            }
            set
            {
                if (_ToothId != value)
                {
                    OnToothIdChanging(value);
                    ReportPropertyChanging("ToothId");
                    _ToothId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToothId");
                    OnToothIdChanged();
                }
            }
        }
        private global::System.Int32 _ToothId;
        partial void OnToothIdChanging(global::System.Int32 value);
        partial void OnToothIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PicUrl
        {
            get
            {
                return _PicUrl;
            }
            set
            {
                OnPicUrlChanging(value);
                ReportPropertyChanging("PicUrl");
                _PicUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PicUrl");
                OnPicUrlChanged();
            }
        }
        private global::System.String _PicUrl;
        partial void OnPicUrlChanging(global::System.String value);
        partial void OnPicUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        new public global::System.Int32 EntityState
        {
            get
            {
                return _EntityState;
            }
            set
            {
                OnEntityStateChanging(value);
                ReportPropertyChanging("EntityState");
                _EntityState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityState");
                OnEntityStateChanged();
            }
        }
        private global::System.Int32 _EntityState;
        partial void OnEntityStateChanging(global::System.Int32 value);
        partial void OnEntityStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentUser_UserId
        {
            get
            {
                return _CurrentUser_UserId;
            }
            set
            {
                OnCurrentUser_UserIdChanging(value);
                ReportPropertyChanging("CurrentUser_UserId");
                _CurrentUser_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentUser_UserId");
                OnCurrentUser_UserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentUser_UserId;
        partial void OnCurrentUser_UserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentUser_UserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Teeth_ToothId", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Teeth_ToothId", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Teeth_ToothId", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Teeth_dbo_Users_CurrentUser_UserId", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Teeth_dbo_Users_CurrentUser_UserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Teeth_dbo_Users_CurrentUser_UserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Teeth_dbo_Users_CurrentUser_UserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DentistModel.FK_dbo_Teeth_dbo_Users_CurrentUser_UserId", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_TeethAppointments_dbo_Teeth_Teeth_ToothId", "TeethAppointments")]
        public EntityCollection<TeethAppointment> TeethAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeethAppointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Teeth_Teeth_ToothId", "TeethAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeethAppointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Teeth_Teeth_ToothId", "TeethAppointments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DentistModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="entityState">Initial value of the EntityState property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.DateTime dateCreated, global::System.Boolean isDeleted, global::System.Int32 entityState)
        {
            User user = new User();
            user.UserId = userId;
            user.DateCreated = dateCreated;
            user.IsDeleted = isDeleted;
            user.EntityState = entityState;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TelNo1
        {
            get
            {
                return _TelNo1;
            }
            set
            {
                OnTelNo1Changing(value);
                ReportPropertyChanging("TelNo1");
                _TelNo1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TelNo1");
                OnTelNo1Changed();
            }
        }
        private global::System.String _TelNo1;
        partial void OnTelNo1Changing(global::System.String value);
        partial void OnTelNo1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TelNo2
        {
            get
            {
                return _TelNo2;
            }
            set
            {
                OnTelNo2Changing(value);
                ReportPropertyChanging("TelNo2");
                _TelNo2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TelNo2");
                OnTelNo2Changed();
            }
        }
        private global::System.String _TelNo2;
        partial void OnTelNo2Changing(global::System.String value);
        partial void OnTelNo2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        new public global::System.Int32 EntityState
        {
            get
            {
                return _EntityState;
            }
            set
            {
                OnEntityStateChanging(value);
                ReportPropertyChanging("EntityState");
                _EntityState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityState");
                OnEntityStateChanged();
            }
        }
        private global::System.Int32 _EntityState;
        partial void OnEntityStateChanging(global::System.Int32 value);
        partial void OnEntityStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentUser_UserId
        {
            get
            {
                return _CurrentUser_UserId;
            }
            set
            {
                OnCurrentUser_UserIdChanging(value);
                ReportPropertyChanging("CurrentUser_UserId");
                _CurrentUser_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentUser_UserId");
                OnCurrentUser_UserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentUser_UserId;
        partial void OnCurrentUser_UserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentUser_UserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Appointments_dbo_Users_CurrentUser_UserId", "Appointments")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("DentistModel.FK_dbo_Appointments_dbo_Users_CurrentUser_UserId", "Appointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("DentistModel.FK_dbo_Appointments_dbo_Users_CurrentUser_UserId", "Appointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Notes_dbo_Users_CurrentUser_UserId", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Users_CurrentUser_UserId", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("DentistModel.FK_dbo_Notes_dbo_Users_CurrentUser_UserId", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_OperationAppointments_dbo_Users_CurrentUser_UserId", "OperationAppointments")]
        public EntityCollection<OperationAppointment> OperationAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OperationAppointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Users_CurrentUser_UserId", "OperationAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OperationAppointment>("DentistModel.FK_dbo_OperationAppointments_dbo_Users_CurrentUser_UserId", "OperationAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Operations_dbo_Users_CurrentUser_UserId", "Operations")]
        public EntityCollection<Operation> Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Operation>("DentistModel.FK_dbo_Operations_dbo_Users_CurrentUser_UserId", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Operation>("DentistModel.FK_dbo_Operations_dbo_Users_CurrentUser_UserId", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Patients_dbo_Users_CurrentUser_UserId", "Patients")]
        public EntityCollection<Patient> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("DentistModel.FK_dbo_Patients_dbo_Users_CurrentUser_UserId", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("DentistModel.FK_dbo_Patients_dbo_Users_CurrentUser_UserId", "Patients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Teeth_dbo_Users_CurrentUser_UserId", "Teeth")]
        public EntityCollection<Tooth> Teeth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tooth>("DentistModel.FK_dbo_Teeth_dbo_Users_CurrentUser_UserId", "Teeth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tooth>("DentistModel.FK_dbo_Teeth_dbo_Users_CurrentUser_UserId", "Teeth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_TeethAppointments_dbo_Users_CurrentUser_UserId", "TeethAppointments")]
        public EntityCollection<TeethAppointment> TeethAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeethAppointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Users_CurrentUser_UserId", "TeethAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeethAppointment>("DentistModel.FK_dbo_TeethAppointments_dbo_Users_CurrentUser_UserId", "TeethAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Users_dbo_Users_CurrentUser_UserId", "Users1")]
        public EntityCollection<User> Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DentistModel.FK_dbo_Users_dbo_Users_CurrentUser_UserId", "Users1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DentistModel.FK_dbo_Users_dbo_Users_CurrentUser_UserId", "Users1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DentistModel", "FK_dbo_Users_dbo_Users_CurrentUser_UserId", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Users_dbo_Users_CurrentUser_UserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Users_dbo_Users_CurrentUser_UserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DentistModel.FK_dbo_Users_dbo_Users_CurrentUser_UserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DentistModel.FK_dbo_Users_dbo_Users_CurrentUser_UserId", "Users", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
